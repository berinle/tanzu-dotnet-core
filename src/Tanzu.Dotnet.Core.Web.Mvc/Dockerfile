# Start with the ASP.NET core runtime image. This bundles all the dependencies
# that will allow us to bundle our code
FROM mcr.microsoft.com/dotnet/core/sdk:3.0-alpine AS build
WORKDIR /app

# Copy csproj and restore as distinct layers
COPY *.csproj ./tanzu-dotnet-core-web-mvc/
RUN dotnet restore tanzu-dotnet-core-web-mvc/Tanzu.Dotnet.Core.Web.Mvc.csproj

# Copy everything else and build
COPY . ./tanzu-dotnet-core-web-mvc/
WORKDIR /app/tanzu-dotnet-core-web-mvc
RUN dotnet publish -c Release -o out

# Build runtime image
FROM mcr.microsoft.com/dotnet/core/aspnet:3.0-alpine AS runtime
COPY --from=build /app/tanzu-dotnet-core-web-mvc/out ./

# As we're running a web-server
# we'd like docker to listen for traffic on port 80 (for http) and port 443 (for https) 
EXPOSE 80
EXPOSE 443

# Set the correct entrypoint, which is the dll generated by publish.
# This means that when the container starts, dotnet will start with this .dll
ENTRYPOINT ["dotnet", "Tanzu.Dotnet.Core.Web.Mvc.dll"]